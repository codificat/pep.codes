#+hugo_base_dir: ../
#+bibliography: ~/doc/bibliography/zotero.bib
#+cite_export: csl

* DONE Running Emacs in server mode                           :emacs:systemd:
CLOSED: [2022-12-09 Fri 21:52]
:PROPERTIES:
:EXPORT_FILE_NAME: emacs-systemd
:END:
:LOGBOOK:
- State "NEXT"       from              [2022-12-09 Fri 16:55]
- State "CANCELLED"  from "TODO"       [2022-12-09 Fri 13:58] \\
  testing adding a timestamp
- State "TODO"       from              [2022-11-24 dj. 16:22]
- State "CANCELLED"  from "TODO"       [2022-11-24 dj. 15:55] \\
  just testing hugo export
- State "TODO"       from              [2022-11-24 dj. 13:30]
:END:

#+begin_comment
Note: content taken from daily notes:
- [[id:81487236-428d-464e-9b2b-b97c7ea8c08e][2022-11-24]]
- [[id:c1db16ab-4806-4a98-bf93-87e0dfcf6b1b][2022-11-28]]
- [[id:a4a0d1ec-a2ca-4333-9274-ceed1ec7450d][2022-11-29]]
- [[id:b86776bd-2be5-4b9f-8478-72486a8d0a6d][2022-12-01]]
- [[id:b643c6bc-025a-48b6-9df4-dc0db769782e][Emacs]]
#+end_comment

I have been running Emacs in server mode for a while. Until recently, my workflow was:

  1. start emacs
  2. =M-x server-start=

Following the blog post [cite:@schwartzmeyer2021emacs], from now on I will try
to start Emacs directly server mode, managed by systemd:

#+begin_src sh
  systemctl --user enable --now emacs
  journalctl --user-unit emacs
#+end_src

** Fixing the systemd unit

Enabling the systemd unit initially failed:

#+begin_example
pep@uio ~ $ systemctl --user enable emacs
Failed to enable unit: Unit file /home/pep/.config/systemd/user/default.target.wants/emacs.service does not exist.
#+end_example

Quickly fixed with:

#+begin_example
pep@uio user (master) $ mkdir -p ~/.config/systemd/user/default.target.wants
pep@uio user (master) $ systemctl --user enable emacs
Created symlink /home/pep/.config/systemd/user/default.target.wants/emacs.service → /usr/lib/systemd/user/emacs.service.
#+end_example

with the following contents:

#+begin_src toml
[Unit]
Description=Emacs text editor
Documentation=info:emacs man:emacs(1) https://gnu.org/software/emacs/

[Service]
Type=notify
ExecStart=/usr/bin/emacs --fg-daemon

# Emacs will exit with status 15 after having received SIGTERM, which
# is the default "KillSignal" value systemd uses to stop services.
SuccessExitStatus=15

# The location of the SSH auth socket varies by distribution, and some
# set it from PAM, so don't override by default.
# Environment=SSH_AUTH_SOCK=%t/keyring/ssh
Restart=on-failure

[Install]
WantedBy=default.target
#+end_src

** Safe shutdown

Then, what about open files when closing?

Building upon [[https://www.emacswiki.org/emacs/EmacsAsDaemon#h5o-2][EmacsWiki docs for systemd]] I believe I should modify the systemd unit to include something like:

#+begin_src toml
  ExecStop=/usr/bin/emacsclient --eval "(save-buffers-kill-emacs)"
#+end_src

but I need to finalize some doubts, like setting =confirm-kill-process=.
  
** Checking status

After starting it with ~systemctl --user start emacs~:

#+begin_example
pep@uio ~ $ systemctl --user status emacs
● emacs.service - Emacs text editor
     Loaded: loaded (/usr/lib/systemd/user/emacs.service; disabled; vendor preset: disabled)
     Active: active (running) since Thu 2022-11-24 12:40:42 CET; 21min ago
       Docs: info:emacs
             man:emacs(1)
             https://gnu.org/software/emacs/
   Main PID: 43673 (emacs)
      Tasks: 8 (limit: 38145)
     Memory: 516.1M
        CPU: 44.767s
     CGroup: /user.slice/user-1000.slice/user@1000.service/app.slice/emacs.service
             ├─ 43673 /usr/bin/emacs --fg-daemon
             ├─ 43677 /home/pep/.emacs.d/elpa/emacsql-sqlite-20221024.1455/sqlite/emacsql-sqlite /home/pep/.emacs.d/org-roam.db
             ├─ 43710 /home/pep/.emacs.d/elpa/pdf-tools-20221007.1404/epdfinfo
             ├─ 43946 /usr/bin/mu server
             └─ 46975 /usr/bin/sh -i

de nov. 24 12:40:42 uio systemd[2978]: Started emacs.service - Emacs text editor.
#+end_example

** Updating client configuration

I have updated my i3wm configuration so that =S-b= will create a new emacs
frame:

#+begin_example
$ grep -i emacs .config/i3/config 
# open a new emacs frame
bindsym $mod+b exec --no-startup-id emacsclient -c
#+end_example

So, now, opening Emacs after logging in is just one keyboard shortcut away.

Also updated aliases related to =emacsclient=:

#+begin_src bash
alias e='emacsclient'
alias et='emacsclient -t'  # for staying in the terminal
#+end_src

#+print_bibliography:

** TODO COMMENT Pending issues

[[https://magit.vc/][Magit]] [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Fringes.html][fringes]] don't show up, see notes taken [[id:8dc4508b-7f4d-4bf2-ace2-ef3bae65e3cb][2022-12-16]].

One workaround could be to hardcode the value of =magit-section-visibility-indicator= in the emacs config.
along the lines of https://irreal.org/blog/?p=8877 (for a different setting).

As this is a customizable value, I just hardcoded it with customize.

But there must be a better way

I want that value to be different if I am in a terminal client vs a graphical client!

*NOTE*: I am pretty sure that, somehow, org-capture manages to find out it's
 running on a graphical session: I'm pretty sure I have seen it add a red dot
 fringe after capturing a new journal entry or action item for the inbox
